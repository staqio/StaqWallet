// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name StaqWallet
import Combine
import DeveloperToolsSupport
import Foundation
@_exported import StaqWallet
import Swift
import SwiftUI
import TrustlessSDK
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension TrustlessSDK.TrustlessError : Swift.Identifiable {
  public var id: Swift.String {
    get
  }
  public typealias ID = Swift.String
}



public struct StaqWalletConfig {
  public enum Language {
    case en
    case ar
    public static func == (a: StaqWallet.StaqWalletConfig.Language, b: StaqWallet.StaqWalletConfig.Language) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  public init(userId: Swift.String, secret: Swift.String, language: StaqWallet.StaqWalletConfig.Language, googleMapsApiKey: Swift.String, email: Swift.String? = nil, mobileNumber: Swift.String? = nil)
}
@objc @_Concurrency.MainActor(unsafe) public class StaqWalletNavigationController : UIKit.UINavigationController {
  @_Concurrency.MainActor(unsafe) public init(config: StaqWallet.StaqWalletConfig)
  @available(*, unavailable)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc deinit
}










extension UIKit.UIApplication : UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
}









extension StaqWallet.StaqWalletConfig.Language : Swift.Equatable {}
extension StaqWallet.StaqWalletConfig.Language : Swift.Hashable {}
